---


# -------------------------------------------
# *** Add Sys-admin ***
# -------------------------------------------

- name: Create initial user '{{ mattermost_config_sys_admin.username }}' (system-admin) if it doesn't exist
  ansible.builtin.command: >
    ./bin/mmctl user create 
    --email {{ mattermost_config_sys_admin.email }} 
    --username {{ mattermost_config_sys_admin.username }}  
    --password {{ mattermost_config_sys_admin.password }} 
    --firstname {{ mattermost_config_sys_admin.firstname }} 
    --lastname {{ mattermost_config_sys_admin.lastname }} 
    --system-admin 
    --local
  register: create_user_result
  become: yes
  args:
    chdir: "{{ mm_paths.base }}"
  failed_when: 
    create_user_result.rc != 0 and 
    'An account with that username already exists.' not in create_user_result.stderr


# -------------------------------------------
# *** Create Team ***
# -------------------------------------------

- name: Remove team '{{ mattermost_config_team.name }}'
  ansible.builtin.command: >
    ./bin/mmctl team delete {{ mattermost_config_team.name }} 
    --confirm
    --local
  become: yes
  args:
    chdir: "{{ mm_paths.base }}"
  when: mattermost_config_team.force | default(false)

- name: Create team '{{ mattermost_config_team.name }}' if it doesn't exist
  ansible.builtin.command: >
    ./bin/mmctl team create 
    --name {{ mattermost_config_team.name }} 
    --email {{ mattermost_config_team.email }}  
    --display-name {{ mattermost_config_team.display_name | quote }} 
    {% if mattermost_config_team.private %} --private {% endif %}  
    --local
  register: create_team_result
  become: yes
  args:
    chdir: "{{ mm_paths.base }}"
  failed_when: 
    create_team_result.rc != 0 and 
    'Must call update for existing team.' not in create_team_result.stderr

# -------------------------------------------
# *** Create Channel ***
# -------------------------------------------

- name: Remove channel '{{ mattermost_config_channel.name }}'
  ansible.builtin.command: >
    ./bin/mmctl channel delete {{ mattermost_config_team.name }}:{{ mattermost_config_channel.name }} 
    --confirm
    --local
  become: yes
  args:
    chdir: "{{ mm_paths.base }}"
  when: mattermost_config_channel.force | default(false)

- name: Create channel '{{ mattermost_config_channel.name }}' if it doesn't exist
  ansible.builtin.command: >
    ./bin/mmctl channel create 
    --name {{ mattermost_config_channel.name }} 
    --display-name {{ mattermost_config_channel.display_name | quote }}
    --header {{ mattermost_config_channel.header | quote }}
    --team {{ mattermost_config_channel.team | quote }}
    {% if mattermost_config_team.private %} --private {% endif %}  
    --local
  register: create_channel_result
  become: yes
  args:
    chdir: "{{ mm_paths.base }}"
  failed_when: 
    create_channel_result.rc != 0 and 
    'A channel with that name already exists on the same team.' not in create_channel_result.stderr
