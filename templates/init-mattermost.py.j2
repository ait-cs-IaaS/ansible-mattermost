from mattermostdriver import Driver
import requests
import time
import yaml

learners_users = {}

try:
    with open("{{ mattermost_basepath }}/init.yml", "r") as yaml_file:
        config = yaml.safe_load(yaml_file)
        learners_users = config["users"]
except Exception as e:
    print(f"[error] An error occurred: {str(e)}")


admins = []
users = []
teams = {}

for username, userdetails in learners_users.items():
    user = {
        "username": username,
        "password": userdetails.get("password"),
        "first_name": userdetails.get("meta", {}).get("first_name", ""),
        "last_name": userdetails.get("meta", {}).get("last_name", ""),
        "email": userdetails.get("meta", {}).get("email", f"{username}@learners.rocks"),
        "email_verified": True,
        "send_email": False,
    }

    users.append(user)

    user_teams = userdetails.get("meta", {}).get("mattermost", {}).get("teams", {})

    for team, team_details in user_teams.items():
        if not teams.get(team):
            teams[team] = {
                "name": team.lower(),
                "display_name": team,
                "users": [],
                "channels": {},
                "type": "I",
            }
        teams[team]["users"].append(username)

        for channel in team_details.get("channels", []):
            if not teams.get(team).get("channels").get(channel):
                teams[team]["channels"][channel] = {
                    "name": channel.lower(),
                    "team_name": team.lower(),
                    "display_name": channel,
                    "type": "P",
                    "users": [],
                }
            teams[team]["channels"][channel]["users"].append(username)

    if userdetails.get("admin") or userdetails.get("role") == "instructor":
        admins.append(username)


# Wait for Mattermost server to start
while True:
    try:
        response = requests.get("http://127.0.0.1:8065/api/v4/system/ping")
        response.raise_for_status()
        if response.status_code == 200:
            break
    except requests.exceptions.RequestException:
        pass
    time.sleep(1)


# Create initial admin user
requests.post(
    "http://127.0.0.1:8065/api/v4/users",
    json={
        "email": "admin@learners.rocks",
        "password": "mozart.rocks!",
        "username": "admin",
    }
)

driver = Driver(
    {
        "url": "localhost",
        "login_id": "admin",
        "password": "mozart.rocks!",
        "port": 8065,
        "scheme": "http",
    }
)

driver.login()


#############################################
# Create USERS
#############################################

for user in users:
    try:
        driver.users.create_user(user)
    except:
        pass

#############################################
# Add admin priviledges
#############################################

for admin in admins:
    try:
        user_id = driver.users.get_user_by_username(admin)["id"]
        driver.users.update_user_role(user_id, {"roles": "system_admin system_user"})
    except:
        pass

#############################################
# Create TEAMS
#############################################

for _, team in teams.items():
    try:
        # Create Team
        team_id = driver.teams.create_team(team)["id"]

        # Add members to team
        for member in team.get("users"):
            user_id = driver.users.get_user_by_username(member)["id"]
            driver.teams.add_user_to_team(
                team_id, {"team_id": team_id, "user_id": user_id}
            )

        # Create channels
        for _, channel in team.get("channels").items():
            channel["team_id"] = team_id
            channel_id = driver.channels.create_channel(channel)["id"]

            # Add members to channel
            for member in channel.get("users"):
                user_id = driver.users.get_user_by_username(member)["id"]
                driver.channels.add_user(channel_id, {"user_id": user_id})

    except:
        pass

driver.logout()
